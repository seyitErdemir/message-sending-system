// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Destek",
            "email": "destek@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cron/logs": {
            "get": {
                "description": "Cron job'ın çalışma loglarını getirir",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cron"
                ],
                "summary": "Cron loglarını getir",
                "responses": {
                    "200": {
                        "description": "Başarılı yanıt",
                        "schema": {
                            "$ref": "#/definitions/handlers.CronLogsResponse"
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cron/start": {
            "post": {
                "description": "Mesaj gönderme cron job'ını başlatır",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cron"
                ],
                "summary": "Cron job'ı başlat",
                "responses": {
                    "200": {
                        "description": "Başarılı yanıt",
                        "schema": {
                            "$ref": "#/definitions/handlers.CronMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cron/status": {
            "get": {
                "description": "Cron job'ın çalışıp çalışmadığını kontrol eder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cron"
                ],
                "summary": "Cron job durumunu getir",
                "responses": {
                    "200": {
                        "description": "Başarılı yanıt",
                        "schema": {
                            "$ref": "#/definitions/handlers.CronStatusResponse"
                        }
                    }
                }
            }
        },
        "/cron/stop": {
            "post": {
                "description": "Mesaj gönderme cron job'ını durdurur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cron"
                ],
                "summary": "Cron job'ı durdur",
                "responses": {
                    "200": {
                        "description": "Başarılı yanıt",
                        "schema": {
                            "$ref": "#/definitions/handlers.CronMessageResponse"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "description": "Veritabanındaki tüm mesajları getirir",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Tüm mesajları getir",
                "responses": {
                    "200": {
                        "description": "Başarılı yanıt",
                        "schema": {
                            "$ref": "#/definitions/handlers.MessagesResponse"
                        }
                    },
                    "500": {
                        "description": "Sunucu hatası",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Yeni bir mesaj oluşturur ve veritabanına kaydeder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Yeni mesaj oluştur",
                "parameters": [
                    {
                        "description": "Mesaj bilgileri",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Başarılı yanıt",
                        "schema": {
                            "$ref": "#/definitions/handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Geçersiz istek",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreateMessageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Mesaj içeriği",
                    "type": "string",
                    "example": "Merhaba, siparişiniz hazırlanıyor."
                },
                "phone": {
                    "description": "Telefon numarası",
                    "type": "string",
                    "example": "+905551234567"
                }
            }
        },
        "handlers.CronLogsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Cron logları",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CronLog"
                    }
                },
                "status": {
                    "description": "İşlem durumu",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handlers.CronMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "İşlem mesajı",
                    "type": "string",
                    "example": "Cron başlatıldı"
                },
                "status": {
                    "description": "İşlem durumu",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handlers.CronStatusResponse": {
            "type": "object",
            "properties": {
                "is_running": {
                    "description": "Cron job çalışma durumu",
                    "type": "boolean",
                    "example": true
                },
                "status": {
                    "description": "İşlem durumu",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Hata kodu",
                    "type": "string",
                    "example": "CONTENT_REQUIRED"
                },
                "message": {
                    "description": "Hata mesajı",
                    "type": "string",
                    "example": "Content alanı zorunludur"
                },
                "status": {
                    "description": "İşlem durumu",
                    "type": "string",
                    "example": "failed"
                }
            }
        },
        "handlers.MessageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Mesaj verisi",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Message"
                        }
                    ]
                },
                "status": {
                    "description": "İşlem durumu",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handlers.MessagesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Mesaj listesi",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                },
                "status": {
                    "description": "İşlem durumu",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "models.CronLog": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message_ids": {
                    "description": "Comma separated message IDs",
                    "type": "string"
                },
                "messages_count": {
                    "type": "integer"
                },
                "operation": {
                    "description": "START, STOP, UPDATE",
                    "type": "string"
                },
                "status": {
                    "description": "Success or Failure",
                    "type": "boolean"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Fiber Message API",
	Description:      "Bu API, mesaj gönderme ve yönetme işlemleri için kullanılır.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
