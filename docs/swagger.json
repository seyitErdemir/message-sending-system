{
    "swagger": "2.0",
    "info": {
        "description": "This API is used for message sending and management operations.",
        "title": "Fiber Message API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Destek",
            "email": "destek@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/cron/logs": {
            "get": {
                "description": "Retrieves the cron job execution logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cron"
                ],
                "summary": "Get cron logs",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/handlers.CronLogsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cron/start": {
            "post": {
                "description": "Starts the message sending cron job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cron"
                ],
                "summary": "Start cron job",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/handlers.CronMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cron/status": {
            "get": {
                "description": "Checks if the cron job is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cron"
                ],
                "summary": "Get cron job status",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/handlers.CronStatusResponse"
                        }
                    }
                }
            }
        },
        "/cron/stop": {
            "post": {
                "description": "Stops the message sending cron job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cron"
                ],
                "summary": "Stop cron job",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/handlers.CronMessageResponse"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "description": "Retrieves messages from database where status is true (sent)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get all sent messages",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/handlers.MessagesResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new message and saves it to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Create new message",
                "parameters": [
                    {
                        "description": "Message information",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/handlers.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreateMessageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Message content",
                    "type": "string",
                    "example": "Hello, your order is being prepared."
                },
                "phone": {
                    "description": "Phone number",
                    "type": "string",
                    "example": "+905551234567"
                }
            }
        },
        "handlers.CronLogsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Cron logs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CronLog"
                    }
                },
                "status": {
                    "description": "Operation status",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handlers.CronMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Operation message",
                    "type": "string",
                    "example": "Cron started"
                },
                "status": {
                    "description": "Operation status",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handlers.CronStatusResponse": {
            "type": "object",
            "properties": {
                "is_running": {
                    "description": "Cron job running status",
                    "type": "boolean",
                    "example": true
                },
                "status": {
                    "description": "Operation status",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code",
                    "type": "string",
                    "example": "CONTENT_REQUIRED"
                },
                "message": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Content field required"
                },
                "status": {
                    "description": "Operation status",
                    "type": "string",
                    "example": "failed"
                }
            }
        },
        "handlers.MessageResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Message data",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Message"
                        }
                    ]
                },
                "status": {
                    "description": "Operation status",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "handlers.MessagesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Message list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                },
                "status": {
                    "description": "Operation status",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "models.CronLog": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message_ids": {
                    "description": "Comma separated message IDs",
                    "type": "string"
                },
                "messages_count": {
                    "type": "integer"
                },
                "operation": {
                    "description": "START, STOP, UPDATE",
                    "type": "string"
                },
                "status": {
                    "description": "Success or Failure",
                    "type": "boolean"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}