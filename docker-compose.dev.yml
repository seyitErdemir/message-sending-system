version: '3.8'

services:
  app:
    build:
      context: .
      target: development
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env
    environment:
      - DB_HOST=mysql
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - APP_PORT=${APP_PORT}
      - APP_ENV=development
      - WEBHOOK_URL=${WEBHOOK_URL}
      - WEBHOOK_AUTH_KEY=${WEBHOOK_AUTH_KEY}
      - CRON_SCHEDULE=${CRON_SCHEDULE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - .:/app
      - go-modules:/go/pkg/mod
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  mysql:
    extends:
      file: docker-compose.yml
      service: mysql

  redis:
    extends:
      file: docker-compose.yml
      service: redis

  phpmyadmin:
    extends:
      file: docker-compose.yml
      service: phpmyadmin

volumes:
  mysql_data:
  redis_data:
  go-modules:

networks:
  app-network:
    driver: bridge 